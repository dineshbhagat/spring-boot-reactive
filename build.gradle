plugins {
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'application'
}

ext {
    junitVersion = "5.3.2"
}

group = 'com.dkb'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
}

applicationName = "spring-boot-reactive"
mainClassName = "com.dkb.springbootreactive.SpringBootReactiveApplication"

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
//	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

    // https://stackoverflow.com/a/48418409/2987755, 
    // spring-boot-starter-data-rest brings spring-boot-starter-web as a transitive dependency (so basically Spring MVC). 
    // This makes Spring Boot configure your application as a Spring MVC web application.
    // Spring Data REST does not currently support Spring WebFlux 
//	implementation 'org.springframework.boot:spring-boot-starter-data-rest'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.data:spring-data-rest-hal-explorer'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    compileOnly("org.projectlombok:lombok:1.18.10")
    annotationProcessor("org.projectlombok:lombok:1.18.10")


    // test libs
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude group: 'junit', module: 'junit'
    }
    testImplementation 'io.projectreactor:reactor-test'

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testCompile("org.junit.jupiter:junit-jupiter-params:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    testCompile("junit:junit:4.12")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}
